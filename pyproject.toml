[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "openrouter-sse-backend"
version = "0.1.0"
requires-python = ">=3.11"
dependencies = [
  "fastapi>=0.112",
  "uvicorn>=0.30",
  "pydantic>=2.8",
  "pydantic-settings>=2.2",
  "openai>=1.45",              # AsyncOpenAI client
  "httpx>=0.27",
  "mcp>=1.1",                  # official Model Context Protocol SDK (FastMCP)
  "python-dotenv>=1.0",
  "structlog>=24.1",
]

[project.scripts]
openrouter-server = "app.main:main"
openrouter-mcp = "app.mcp_server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/app", "src/routers", "src/services"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort (import sorting)
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults (FastAPI Query/Path/Body are safe)
]

[tool.ruff.lint.isort]
known-first-party = ["app", "routers", "services"]
force-single-line = false
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[dependency-groups]
dev = [
    "ruff>=0.12.12",
    "pytest>=8.0",
    "pytest-asyncio>=0.24",
    "mypy>=1.8.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
